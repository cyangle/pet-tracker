version: "3.7"
services:
  app_dev:
    image: "${PROJECT_NAME}:dev"
    build:
      context: ..
      dockerfile: Dockerfile
      target: builder
      args:
        base_build_image: "${BASE_BUILD_IMAGE}"
        base_app_image: "${BASE_APP_IMAGE}"
        app_user: "${APP_USER}"
        app_user_group: "${APP_USER_GROUP}"
        app_root: ${APP_ROOT}
        debian_extra_build_packages: "${DEBIAN_EXTRA_BUILD_PACKAGES}"
        debian_extra_production_packages: "${DEBIAN_EXTRA_PRODUCTION_PACKAGES}"
        crystal_env: development
        node_env: development
    container_name: "app.${PROJECT_NAME}_dev"
    hostname: "app.${PROJECT_NAME}_dev"
    ports:
      - "5000:3000"
    depends_on:
      - db_dev
    env_file: .docker_container_dev.env
    environment:
      DATABASE_URL: "postgres://${DB_USER_NAME}:${DB_PASSWORD}@db.${PROJECT_NAME}_dev:5432/postgres"
      DB_HOST: "db.${PROJECT_NAME}_dev"
      DB_USER_NAME: ${DB_USER_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - app_net
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - type: volume
        source: app_home
        target: "${APP_USER_HOME}"
        consistency: cached
        volume:
          nocopy: true
      - type: volume
        source: app_lib
        target: "${APP_ROOT}/lib"
        consistency: cached
        volume:
          nocopy: true
      - type: volume
        source: app_node_modules
        target: "${APP_ROOT}/node_modules"
        consistency: cached
        volume:
          nocopy: true
      - type: bind
        source: ..
        target: "${APP_ROOT}"
        consistency: cached
      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock
    # Overrides default command so things don't shut down after the process ends.
    command: "sh -c 'sudo chown -R 1000:1000 $APP_USER_HOME && sleep infinity'"
  db_dev:
    image: "postgres:${POSTGRES_IMAGE_VERSION}"
    container_name: "db.${PROJECT_NAME}_dev"
    hostname: "db.${PROJECT_NAME}_dev"
    env_file: .docker_container_dev.env
    environment:
      POSTGRES_DB: postgres
      # db super user name
      POSTGRES_USER: ${DB_USER_NAME}
      # db super user password
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net

networks:
  app_net:
    name: "${PROJECT_NAME}_dev"
    external: false

volumes:
  db_data:
    name: "${PROJECT_NAME}_dev_db_data"
  app_node_modules:
    name: "${PROJECT_NAME}_app_node_modules_dev"
  app_lib:
    name: "${PROJECT_NAME}_app_lib_dev"
  app_home:
    name: "${PROJECT_NAME}_app_home_dev"
